/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public void reorderList(ListNode head) {
        ListNode slow=head;
        ListNode fast=head;
        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        ListNode middleStart = slow.next;
        slow.next = null; 
        ListNode middle = reverse(middleStart);
        ListNode first=head;
        while(middle!=null){
            ListNode temp1 = first.next;
            ListNode temp2 = middle.next;
            first.next = middle;
            middle.next = temp1;
            first = temp1;
            middle= temp2;
        }
    }
    public ListNode reverse(ListNode slow){
        ListNode prev=null;
        while(slow!=null){
            ListNode temp=slow.next;
            slow.next=prev;
            prev=slow;
            slow=temp;
        }
        return prev;
    }
}
